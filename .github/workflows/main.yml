name: Deploying an app
on:
    workflow_dispatch:
    push:
        branches: [ "dev" , "main"]
jobs:
    dev:
        runs-on: ubuntu-latest
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
            AWS_DEFAULT_REGION: us-east-1
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Setup AWS CLI Credentials
              run: |
                aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                aws configure set aws_session_token $AWS_SESSION_TOKEN

            - name: Install AWS CLI
              run: |
                sudo apt-get update
                sudo apt-get install -y awscli

            - name: Install Docker Compose
              run: |
                DOCKER_COMPOSE_VERSION=1.29.2
                sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                docker-compose --version

            - name: Login Docker
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ujwalbudha --password-stdin

            - name: Login to ECR
              run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${{ secrets.AWS_USER_ID }}".dkr.ecr.us-east-1.amazonaws.com

            - name: Build Docker Image
              run: |
                docker-compose build 

            - name: Tag Docker Image
              run: |
               docker tag application_deployment_using_docker_github-action_frontend "${{ secrets.AWS_USER_ID }}".dkr.ecr.us-east-1.amazonaws.com/testujwal001:frontend
               docker push "${{ secrets.AWS_USER_ID }}".dkr.ecr.us-east-1.amazonaws.com/testujwal001:frontend
               

            - name: Upload the docker image to ECR
              run: |
               docker tag application_deployment_using_docker_github-action_backend "${{ secrets.AWS_USER_ID }}".dkr.ecr.us-east-1.amazonaws.com/testujwal001:backend
               docker push "${{ secrets.AWS_USER_ID }}".dkr.ecr.us-east-1.amazonaws.com/testujwal001:backend       
               
            - name: Configuring aws-cli
              run: |
                echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
                ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@${HOSTNAME} '
                aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                aws configure set aws_session_token $AWS_SESSION_TOKEN
                '
           
            - name: Terraform Init
              run: |
                 cd terraform
                 terraform init
       
            - name: Terraform plan
              run: |
                cd terraform
                terraform plan -var-file=dev.tfvars
       
            - name: Terraform apply
              run: |
                cd terraform
                terraform apply -var-file=dev.tfvars -auto-approve